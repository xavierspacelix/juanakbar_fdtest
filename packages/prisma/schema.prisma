generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  email          String   @unique
  password       String
  avatar         String?
  emailVerified  DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  books          Book[]
  emailVerification EmailVerification?
  passwordReset     PasswordReset[]
  refreshTokens     RefreshToken[]
}

model EmailVerification {
  id        Int      @id @default(autoincrement())
  tokenHash String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  tokenHash String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  tokenHash String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  description String?
  thumbnail   String?
  rating      Int       @default(0)
  uploadedAt  DateTime  @default(now())
  uploaderId  Int
  uploader    User      @relation(fields: [uploaderId], references: [id])
}
